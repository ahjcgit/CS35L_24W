{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahjc\\\\Documents\\\\Coding\\\\CS35L\\\\CS35L_Assignment_3\\\\Chorus-Lapilli\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\n/*\nPseudocode concept\nUntil we reach move 7, we follow standard tic-tac-toe rules\nFrom move 7 onwards we can select one of our chosen 'X' or 'O' \nrespectively and can click on an adjacent square\n0 can move to 1, 3, 4, 1 can move to 0, 2, 3, 4, 5 and so on. \nEither implement drag and drop or click and click\nneed to notify user of selection of certain square(Either tint change or label)\n\nThere are no gamestates that result in a immovable state without the game ending in a win/loss\n\n\n*/\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  currentMove\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (currentMove < 6) {\n      if (xIsNext) {\n        nextSquares[i] = \"X\";\n      } else {\n        nextSquares[i] = \"O\";\n      }\n    } else {\n      if (xIsNext) {\n        if (squares[i] === \"X\") {\n          selectMove();\n        } else {\n          console.log(\"Invalid square selected: Next move should be X\");\n        }\n      } else {\n        if (squares[i] === \"O\") {\n          selectMove();\n        } else {\n          console.log(\"Invalid square selected: Next move should be O\");\n        }\n      }\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nexport default function Game() {\n  _s();\n  const [selectedSquare, setselectedSquare] = useState(null);\n  const [hasSelected, sethasSelected] = useState(false);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function selectMove(i, squares, xIsNext) {\n    if (hasSelected === false) {\n      if (squares[i] === null) {\n        console.log(\"Empty Square: select another square\");\n      } else {\n        sethasSelected(true);\n        setselectedSquare(i);\n      }\n    }\n    if (hasSelected === true) {\n      if (selectedSquare === i) {\n        console.log(\"Already Selected: select another square\");\n      } else {\n        if (selectedSquare === 0) {\n          if (i === 1 || i === 3 || i === 4) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 1) {\n          if (i === 0 || i === 1 || i === 2 || i === 3 || i === 4 || i === 5) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 2) {\n          if (i === 1 || i === 4 || i === 5) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 3) {\n          if (i === 0 || i === 1 || i === 4 || i === 6 || i === 7) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 4) {\n          if (i === 0 || i === 1 || i === 2 || i === 3 || i === 5 || i === 6 || i === 7 || i === 8) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 5) {\n          if (i === 1 || i === 2 || i === 4 || i === 7 || i === 8) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 6) {\n          if (i === 3 || i === 4 || i === 7) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 7) {\n          if (i === 3 || i === 4 || i === 5 || i === 6 || i === 8) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n        if (selectedSquare === 8) {\n          if (i === 4 || i === 5 || i === 7) {\n            if (squares[i] === null) {\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n            } else {\n              console.log(\"Already full: select another move\");\n            }\n          }\n        }\n      }\n    }\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        currentMove: currentMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"x2BazbqGokvSH0vK8N8dvaYU6dE=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","currentMove","handleClick","i","calculateWinner","nextSquares","slice","selectMove","console","log","winner","status","_c2","lines","length","a","b","c","Game","_s","selectedSquare","setselectedSquare","hasSelected","sethasSelected","history","setHistory","Array","fill","setCurrentMove","currentSquares","jumpTo","nextMove","handlePlay","nextHistory","moves","map","move","description","_c3","$RefreshReg$"],"sources":["C:/Users/ahjc/Documents/Coding/CS35L/CS35L_Assignment_3/Chorus-Lapilli/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({value, onSquareClick}) {\n  return(\n    <button className=\"square\" onClick={onSquareClick}>\n    {value}\n    </button>\n  );\n}\n\n\n/*\nPseudocode concept\nUntil we reach move 7, we follow standard tic-tac-toe rules\nFrom move 7 onwards we can select one of our chosen 'X' or 'O' \nrespectively and can click on an adjacent square\n0 can move to 1, 3, 4, 1 can move to 0, 2, 3, 4, 5 and so on. \nEither implement drag and drop or click and click\nneed to notify user of selection of certain square(Either tint change or label)\n\nThere are no gamestates that result in a immovable state without the game ending in a win/loss\n\n\n*/\n\nfunction Board({ xIsNext, squares, onPlay, currentMove }) {\n \n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)){\n      return;\n    }\n    const nextSquares = squares.slice();\n    if(currentMove < 6){\n      if (xIsNext){\n        nextSquares[i] = \"X\";\n      }\n      else{\n        nextSquares[i] = \"O\";\n      }  \n    }\n    else{\n      if (xIsNext){\n        if(squares[i] === \"X\"){\n          selectMove();\n        }\n        else{\n          console.log(\"Invalid square selected: Next move should be X\")\n        }\n      }\n      else {\n        if(squares[i] === \"O\"){\n          selectMove();\n        }\n        else{\n          console.log(\"Invalid square selected: Next move should be O\")\n        }\n      }  \n    }\n    \n   \n    onPlay(nextSquares);\n  \n  }\n  \n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  }\n  else{\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return (\n  <>\n    <div className=\"status\">{status}</div>\n    <div className=\"board-row\">  \n      <Square value={squares[0]} onSquareClick={() => handleClick(0)}/>\n      <Square value={squares[1]} onSquareClick={() => handleClick(1)}/>\n      <Square value={squares[2]} onSquareClick={() => handleClick(2)}/>\n    </div>\n    <div className=\"board-row\">  \n      <Square value={squares[3]} onSquareClick={() => handleClick(3)}/>\n      <Square value={squares[4]} onSquareClick={() => handleClick(4)}/>\n      <Square value={squares[5]} onSquareClick={() => handleClick(5)}/>\n    </div>\n    <div className=\"board-row\">  \n      <Square value={squares[6]} onSquareClick={() => handleClick(6)}/>\n      <Square value={squares[7]} onSquareClick={() => handleClick(7)}/>\n      <Square value={squares[8]} onSquareClick={() => handleClick(8)}/>\n    </div>\n  </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b]&&squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default function Game(){\n  const [selectedSquare, setselectedSquare] = useState(null);\n  const [hasSelected, sethasSelected] = useState(false);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  \n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    \n  }\n\n  function selectMove(i, squares, xIsNext) {\n    \n    if(hasSelected === false){\n      if(squares[i]===null){\n        console.log(\"Empty Square: select another square\")\n      }\n      else{\n        sethasSelected(true);\n        setselectedSquare(i);\n      }\n    }\n    if(hasSelected === true){\n      if(selectedSquare === i){\n        console.log(\"Already Selected: select another square\")\n      }\n      else{\n        if(selectedSquare === 0){\n          if(i === 1 || i === 3 || i === 4){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 1){\n          if(i === 0 || i === 1 || i === 2 || i === 3 || i === 4 || i === 5){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 2){\n          if(i === 1 || i === 4 || i === 5){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 3){\n          if(i === 0 || i === 1 || i === 4 || i === 6 || i === 7){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 4){\n          if(i === 0 || i === 1 || i === 2 || i === 3 || i === 5 || i === 6 || i === 7 || i === 8){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 5){\n          if(i === 1 || i === 2 || i === 4 || i === 7 || i === 8){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 6){\n          if(i === 3 || i === 4 || i === 7){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 7){\n          if(i === 3 || i === 4 || i === 5 || i === 6 || i === 8){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n        if(selectedSquare === 8){\n          if(i === 4 || i === 5 || i === 7){\n            if(squares[i]===null){\n              console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n            }\n            else{\n              console.log(\"Already full: select another move\")\n            }\n          }\n        }\n      }\n    }\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0){\n      description = 'Go to move #' + move;\n    }\n    else{\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} currentMove={currentMove}/>\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}