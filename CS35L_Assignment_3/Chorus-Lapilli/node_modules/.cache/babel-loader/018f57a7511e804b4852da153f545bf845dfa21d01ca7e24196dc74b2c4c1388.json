{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahjc\\\\Documents\\\\Coding\\\\CS35L\\\\CS35L_Assignment_3\\\\Chorus-Lapilli\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\n/*\nPseudocode concept\nUntil we reach move 6, we follow standard tic-tac-toe rules\nFrom move 7 onwards we can select one of our chosen 'X' or 'O' \nrespectively and can click on an adjacent square\n0 can move to 1, 3, 4, 1 can move to 0, 2, 3, 4, 5 and so on. \nEither implement drag and drop or click and click\nneed to notify user of selection of certain square(Either tint change or label)\n\nThere are no gamestates that result in a immovable state without the game ending in a win/loss\n*/\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  currentMove,\n  hasSelected,\n  selectedSquare,\n  sethasSelected,\n  setselectedSquare\n}) {\n  //Check if it is a valid move and whether there is currently a winner\n  function handleClick(i) {\n    if (squares[i] && currentMove < 6 || calculateWinner(squares)) {\n      return;\n    }\n    //Normal Tic-tac-toe behavior until move 7\n    const nextSquares = squares.slice();\n    if (currentMove < 6) {\n      nextSquares[i] = xIsNext ? \"X\" : \"O\";\n      onPlay(nextSquares);\n    } else {\n      //If not selected, select valid square. Then choose empty space to move\n      if (!hasSelected) {\n        if (xIsNext && squares[i] === \"X\" || !xIsNext && squares[i] === \"O\") {\n          setselectedSquare(i);\n          sethasSelected(true);\n        } else {\n          console.log(\"Invalid square selected: Next move should be %s\", xIsNext ? \"X\" : \"O\");\n        }\n      } else {\n        if (moveValid(selectedSquare, i) && centerClause(selectedSquare, i)) {\n          console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i);\n          nextSquares[selectedSquare] = null;\n          nextSquares[i] = xIsNext ? \"X\" : \"O\";\n          onPlay(nextSquares);\n          sethasSelected(false);\n        } else {\n          console.log(\"Invalid move: select another move\");\n          sethasSelected(false);\n          setselectedSquare(null);\n        }\n      }\n    }\n  }\n  function moveValid(selectedSquare, i) {\n    if (selectedSquare === 0) {\n      if (i === 1 || i === 3 || i === 4) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 1) {\n      if (i === 0 || i === 1 || i === 2 || i === 3 || i === 4 || i === 5) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 2) {\n      if (i === 1 || i === 4 || i === 5) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 3) {\n      if (i === 0 || i === 1 || i === 4 || i === 6 || i === 7) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 4) {\n      if (i === 0 || i === 1 || i === 2 || i === 3 || i === 5 || i === 6 || i === 7 || i === 8) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 5) {\n      if (i === 1 || i === 2 || i === 4 || i === 7 || i === 8) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 6) {\n      if (i === 3 || i === 4 || i === 7) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 7) {\n      if (i === 3 || i === 4 || i === 5 || i === 6 || i === 8) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    if (selectedSquare === 8) {\n      if (i === 4 || i === 5 || i === 7) {\n        if (squares[i] === null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  function centerClause(selectedSquare, i) {\n    let centerCheck = squares.slice();\n    if (xIsNext ? \"X\" : \"O\" === squares[4]) {\n      centerCheck[selectedSquare] = null;\n      centerCheck[i] = xIsNext ? \"X\" : \"O\";\n      if (calculateWinner(centerCheck) || selectedSquare === 4) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [selectedSquare, setselectedSquare] = useState(null);\n  const [hasSelected, sethasSelected] = useState(false);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        currentMove: currentMove,\n        hasSelected: hasSelected,\n        sethasSelected: sethasSelected,\n        selectedSquare: selectedSquare,\n        setselectedSquare: setselectedSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"x2BazbqGokvSH0vK8N8dvaYU6dE=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","currentMove","hasSelected","selectedSquare","sethasSelected","setselectedSquare","handleClick","i","calculateWinner","nextSquares","slice","console","log","moveValid","centerClause","centerCheck","winner","status","lines","length","a","b","c","_c2","Game","_s","history","setHistory","Array","fill","setCurrentMove","currentSquares","jumpTo","nextMove","handlePlay","nextHistory","moves","map","move","description","_c3","$RefreshReg$"],"sources":["C:/Users/ahjc/Documents/Coding/CS35L/CS35L_Assignment_3/Chorus-Lapilli/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({value, onSquareClick}) {\n  return(\n    <button className=\"square\" onClick={onSquareClick}>\n    {value}\n    </button>\n  );\n}\n\n\n/*\nPseudocode concept\nUntil we reach move 6, we follow standard tic-tac-toe rules\nFrom move 7 onwards we can select one of our chosen 'X' or 'O' \nrespectively and can click on an adjacent square\n0 can move to 1, 3, 4, 1 can move to 0, 2, 3, 4, 5 and so on. \nEither implement drag and drop or click and click\nneed to notify user of selection of certain square(Either tint change or label)\n\nThere are no gamestates that result in a immovable state without the game ending in a win/loss\n*/\n\nfunction Board({ xIsNext, squares, onPlay, currentMove, hasSelected, selectedSquare, sethasSelected, setselectedSquare}) {\n \n  //Check if it is a valid move and whether there is currently a winner\n  function handleClick(i) {\n    if (squares[i] && currentMove < 6 || calculateWinner(squares)){\n      return;\n    }\n    //Normal Tic-tac-toe behavior until move 7\n    const nextSquares = squares.slice();\n\n    if(currentMove < 6){\n      nextSquares[i] = xIsNext ? \"X\" : \"O\";\n      onPlay(nextSquares);\n    } \n    else{ //If not selected, select valid square. Then choose empty space to move\n      if (!hasSelected){\n        if((xIsNext && squares[i] === \"X\") || (!xIsNext && squares[i] === \"O\")){\n          setselectedSquare(i);\n          sethasSelected(true);\n        }\n        else{\n          console.log(\"Invalid square selected: Next move should be %s\", xIsNext ? \"X\" : \"O\")\n        }\n      }\n      else {\n        if(moveValid(selectedSquare, i) && centerClause(selectedSquare, i)){\n          console.log(\"%s moved from %d to %d\", xIsNext ? \"X\" : \"O\", selectedSquare, i)\n          nextSquares[selectedSquare] = null;\n          nextSquares[i] = xIsNext ? \"X\" : \"O\";\n          onPlay(nextSquares)\n          sethasSelected(false);\n        }\n        else{\n          console.log(\"Invalid move: select another move\")\n          sethasSelected(false);\n          setselectedSquare(null);\n        }\n      }  \n    }\n    \n    \n  }\n\n  function moveValid(selectedSquare, i){    \n    if(selectedSquare === 0){\n      if(i === 1 || i === 3 || i === 4){\n        if(squares[i]===null){\n          return true;\n        } \n      }\n    }\n    if(selectedSquare === 1){\n      if(i === 0 || i === 1 || i === 2 || i === 3 || i === 4 || i === 5){\n        if(squares[i]===null){\n          return true;\n        }\n      }\n    }\n    if(selectedSquare === 2){\n      if(i === 1 || i === 4 || i === 5){\n        if(squares[i]===null){\n          return true;\n        }\n      }\n    }\n    if(selectedSquare === 3){\n      if(i === 0 || i === 1 || i === 4 || i === 6 || i === 7){\n        if(squares[i]===null){ \n          return true; \n        }\n      }\n    }\n    if(selectedSquare === 4){\n      if(i === 0 || i === 1 || i === 2 || i === 3 || i === 5 || i === 6 || i === 7 || i === 8){\n        if(squares[i]===null){ \n          return true; \n        }\n      }\n    }\n    if(selectedSquare === 5){\n      if(i === 1 || i === 2 || i === 4 || i === 7 || i === 8){\n        if(squares[i]===null){\n          return true;\n        }\n      }\n    }\n    if(selectedSquare === 6){\n      if(i === 3 || i === 4 || i === 7){\n        if(squares[i]===null){\n          return true;\n        }\n      }\n    }\n    if(selectedSquare === 7){\n      if(i === 3 || i === 4 || i === 5 || i === 6 || i === 8){\n        if(squares[i]===null){\n          return true;\n        }\n      }\n    }\n    if(selectedSquare === 8){\n      if(i === 4 || i === 5 || i === 7){\n        if(squares[i]===null){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  function centerClause(selectedSquare, i){\n    let centerCheck = squares.slice();  \n    \n    if(xIsNext ? \"X\" : \"O\" === squares[4]){\n      centerCheck[selectedSquare] = null;\n      centerCheck[i] = xIsNext ? \"X\" : \"O\";\n      if(calculateWinner(centerCheck) || selectedSquare === 4){\n        return true;\n      }\n      else{\n        return false;\n      }\n    }\n    else{\n        return true;\n    }  \n  }\n  \n\n  \n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  }\n  else{\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return (\n  <>\n    <div className=\"status\">{status}</div>\n    <div className=\"board-row\">  \n      <Square value={squares[0]} onSquareClick={() => handleClick(0)}/>\n      <Square value={squares[1]} onSquareClick={() => handleClick(1)}/>\n      <Square value={squares[2]} onSquareClick={() => handleClick(2)}/>\n    </div>\n    <div className=\"board-row\">  \n      <Square value={squares[3]} onSquareClick={() => handleClick(3)}/>\n      <Square value={squares[4]} onSquareClick={() => handleClick(4)}/>\n      <Square value={squares[5]} onSquareClick={() => handleClick(5)}/>\n    </div>\n    <div className=\"board-row\">  \n      <Square value={squares[6]} onSquareClick={() => handleClick(6)}/>\n      <Square value={squares[7]} onSquareClick={() => handleClick(7)}/>\n      <Square value={squares[8]} onSquareClick={() => handleClick(8)}/>\n    </div>\n  </>\n  );\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b]&&squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n  }\n}\n\nexport default function Game(){\n  const [selectedSquare, setselectedSquare] = useState(null);\n  const [hasSelected, sethasSelected] = useState(false);\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  \n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    \n  }\n  \n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0){\n      description = 'Go to move #' + move;\n    }\n    else{\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} currentMove={currentMove}\n        hasSelected={hasSelected} sethasSelected={sethasSelected} selectedSquare = {selectedSquare} setselectedSquare={setselectedSquare}/>\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,SAASC,MAAMA,CAAC;EAACC,KAAK;EAAEC;AAAa,CAAC,EAAE;EACtC,oBACEL,OAAA;IAAQM,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAEF,aAAc;IAAAG,QAAA,EACjDJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVAC,EAAA,GATSV,MAAM;AAqBf,SAASW,KAAKA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,MAAM;EAAEC,WAAW;EAAEC,WAAW;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAiB,CAAC,EAAE;EAEvH;EACA,SAASC,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAIR,OAAO,CAACQ,CAAC,CAAC,IAAIN,WAAW,GAAG,CAAC,IAAIO,eAAe,CAACT,OAAO,CAAC,EAAC;MAC5D;IACF;IACA;IACA,MAAMU,WAAW,GAAGV,OAAO,CAACW,KAAK,CAAC,CAAC;IAEnC,IAAGT,WAAW,GAAG,CAAC,EAAC;MACjBQ,WAAW,CAACF,CAAC,CAAC,GAAGT,OAAO,GAAG,GAAG,GAAG,GAAG;MACpCE,MAAM,CAACS,WAAW,CAAC;IACrB,CAAC,MACG;MAAE;MACJ,IAAI,CAACP,WAAW,EAAC;QACf,IAAIJ,OAAO,IAAIC,OAAO,CAACQ,CAAC,CAAC,KAAK,GAAG,IAAM,CAACT,OAAO,IAAIC,OAAO,CAACQ,CAAC,CAAC,KAAK,GAAI,EAAC;UACrEF,iBAAiB,CAACE,CAAC,CAAC;UACpBH,cAAc,CAAC,IAAI,CAAC;QACtB,CAAC,MACG;UACFO,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEd,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;QACrF;MACF,CAAC,MACI;QACH,IAAGe,SAAS,CAACV,cAAc,EAAEI,CAAC,CAAC,IAAIO,YAAY,CAACX,cAAc,EAAEI,CAAC,CAAC,EAAC;UACjEI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEd,OAAO,GAAG,GAAG,GAAG,GAAG,EAAEK,cAAc,EAAEI,CAAC,CAAC;UAC7EE,WAAW,CAACN,cAAc,CAAC,GAAG,IAAI;UAClCM,WAAW,CAACF,CAAC,CAAC,GAAGT,OAAO,GAAG,GAAG,GAAG,GAAG;UACpCE,MAAM,CAACS,WAAW,CAAC;UACnBL,cAAc,CAAC,KAAK,CAAC;QACvB,CAAC,MACG;UACFO,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChDR,cAAc,CAAC,KAAK,CAAC;UACrBC,iBAAiB,CAAC,IAAI,CAAC;QACzB;MACF;IACF;EAGF;EAEA,SAASQ,SAASA,CAACV,cAAc,EAAEI,CAAC,EAAC;IACnC,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QAC/B,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QAChE,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QAC/B,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QACrD,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QACtF,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QACrD,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QAC/B,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QACrD,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,IAAGJ,cAAc,KAAK,CAAC,EAAC;MACtB,IAAGI,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC,EAAC;QAC/B,IAAGR,OAAO,CAACQ,CAAC,CAAC,KAAG,IAAI,EAAC;UACnB,OAAO,IAAI;QACb;MACF;IACF;IACA,OAAO,KAAK;EACd;EAEA,SAASO,YAAYA,CAACX,cAAc,EAAEI,CAAC,EAAC;IACtC,IAAIQ,WAAW,GAAGhB,OAAO,CAACW,KAAK,CAAC,CAAC;IAEjC,IAAGZ,OAAO,GAAG,GAAG,GAAG,GAAG,KAAKC,OAAO,CAAC,CAAC,CAAC,EAAC;MACpCgB,WAAW,CAACZ,cAAc,CAAC,GAAG,IAAI;MAClCY,WAAW,CAACR,CAAC,CAAC,GAAGT,OAAO,GAAG,GAAG,GAAG,GAAG;MACpC,IAAGU,eAAe,CAACO,WAAW,CAAC,IAAIZ,cAAc,KAAK,CAAC,EAAC;QACtD,OAAO,IAAI;MACb,CAAC,MACG;QACF,OAAO,KAAK;MACd;IACF,CAAC,MACG;MACA,OAAO,IAAI;IACf;EACF;EAIA,MAAMa,MAAM,GAAGR,eAAe,CAACT,OAAO,CAAC;EACvC,IAAIkB,MAAM;EACV,IAAID,MAAM,EAAE;IACVC,MAAM,GAAG,UAAU,GAAGD,MAAM;EAC9B,CAAC,MACG;IACFC,MAAM,GAAG,eAAe,IAAInB,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;EAClD;EAEA,oBACAf,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAKM,SAAS,EAAC,QAAQ;MAAAE,QAAA,EAAE0B;IAAM;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtCZ,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBR,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACNZ,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBR,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACNZ,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBR,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;QAACX,aAAa,EAAEA,CAAA,KAAMkB,WAAW,CAAC,CAAC;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA,eACN,CAAC;EAGL,SAASa,eAAeA,CAACT,OAAO,EAAE;IAChC,MAAMmB,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;IACD,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,KAAK,CAACC,MAAM,EAAEZ,CAAC,EAAE,EAAE;MACrC,MAAM,CAACa,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGJ,KAAK,CAACX,CAAC,CAAC;MAC1B,IAAIR,OAAO,CAACqB,CAAC,CAAC,IAAIrB,OAAO,CAACqB,CAAC,CAAC,KAAKrB,OAAO,CAACsB,CAAC,CAAC,IAAEtB,OAAO,CAACqB,CAAC,CAAC,KAAKrB,OAAO,CAACuB,CAAC,CAAC,EAAC;QACrE,OAAOvB,OAAO,CAACqB,CAAC,CAAC;MACnB;IACF;IACA,OAAO,IAAI;EACX;AACF;AAACG,GAAA,GAnLQ1B,KAAK;AAqLd,eAAe,SAAS2B,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACtB,cAAc,EAAEE,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACqB,WAAW,EAAEE,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,CAAC+C,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC5B,WAAW,EAAE6B,cAAc,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMkD,cAAc,GAAGL,OAAO,CAACzB,WAAW,CAAC;EAC3C,MAAMH,OAAO,GAAGG,WAAW,GAAG,CAAC,KAAK,CAAC;EAErC,SAAS+B,MAAMA,CAACC,QAAQ,EAAE;IACxBH,cAAc,CAACG,QAAQ,CAAC;EAC1B;EAEA,SAASC,UAAUA,CAACzB,WAAW,EAAE;IAC/B,MAAM0B,WAAW,GAAG,CAAC,GAAGT,OAAO,CAAChB,KAAK,CAAC,CAAC,EAAET,WAAW,GAAG,CAAC,CAAC,EAAEQ,WAAW,CAAC;IACvEkB,UAAU,CAACQ,WAAW,CAAC;IACvBL,cAAc,CAACK,WAAW,CAAChB,MAAM,GAAG,CAAC,CAAC;EAExC;EAEA,MAAMiB,KAAK,GAAGV,OAAO,CAACW,GAAG,CAAC,CAACtC,OAAO,EAAEuC,IAAI,KAAK;IAC3C,IAAIC,WAAW;IACf,IAAID,IAAI,GAAG,CAAC,EAAC;MACXC,WAAW,GAAG,cAAc,GAAGD,IAAI;IACrC,CAAC,MACG;MACFC,WAAW,GAAG,kBAAkB;IAClC;IACA,oBACExD,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAQO,OAAO,EAAEA,CAAA,KAAM0C,MAAM,CAACM,IAAI,CAAE;QAAA/C,QAAA,EAAEgD;MAAW;QAAA/C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC,GADpD2C,IAAI;MAAA9C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CAAC;EAET,CAAC,CAAC;EAEF,oBACEZ,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAE,QAAA,gBACnBR,OAAA;MAAKM,SAAS,EAAC,YAAY;MAAAE,QAAA,eACzBR,OAAA,CAACc,KAAK;QAACC,OAAO,EAAEA,OAAQ;QAACC,OAAO,EAAEgC,cAAe;QAAC/B,MAAM,EAAEkC,UAAW;QAACjC,WAAW,EAAEA,WAAY;QAC/FC,WAAW,EAAEA,WAAY;QAACE,cAAc,EAAEA,cAAe;QAACD,cAAc,EAAIA,cAAe;QAACE,iBAAiB,EAAEA;MAAkB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChI,CAAC,eACNZ,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAE,QAAA,eACxBR,OAAA;QAAAQ,QAAA,EAAK6C;MAAK;QAAA5C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC8B,EAAA,CA7CuBD,IAAI;AAAAgB,GAAA,GAAJhB,IAAI;AAAA,IAAA5B,EAAA,EAAA2B,GAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAA7C,EAAA;AAAA6C,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}